{
  "name": "ssh-connect",
  "displayName": "SSH Connect",
  "icon": "media/ssh-connect.png",
  "description": "Tool for managing SSH connections and tunnels",
  "publisher": "tregota",
  "repository": {
    "type": "git",
    "url": "https://github.com/tregota/vscode-ssh-connect"
  },
  "bugs": {
    "url": "https://github.com/tregota/vscode-ssh-connect/issues"
  },
  "version": "0.3.7",
  "engines": {
    "vscode": "^1.67.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:ssh-connect.mainview",
    "onCommand:ssh-connect.connect",
    "onCommand:ssh-connect.disconnect",
    "onCommand:ssh-connect.refresh",
    "onNotebook:ssh-connect.notebook"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ssh-connect",
          "title": "SSH Connect",
          "icon": "media/ssh-connect.svg"
        }
      ]
    },
    "views": {
      "ssh-connect": [
        {
          "id": "ssh-connect.mainview",
          "name": "Hosts",
          "contextualTitle": "SSH Connect"
        }
      ]
    },
    "notebooks": [
      {
        "id": "ssh-connect.notebook",
        "type": "ssh-connect.notebook",
        "displayName": "SSH Connect Notebook",
        "selector": [
          {
            "filenamePattern": "*.sshbook"
          }
        ]
      }
    ],
    "languages": [
      {
        "id": "ssh-connect.notebook",
        "filenamePatterns": ["*.sshbook"],
        "icon": {
          "light": "./media/sshbook.svg",
          "dark": "./media/sshbook.svg"
        }
      }
    ],
    "commands": [
      {
        "command": "ssh-connect.refresh",
        "title": "Refresh",
        "icon": "$(refresh)",
        "category": "SSH Connect"
      },
      {
        "command": "ssh-connect.connect",
        "title": "Connect",
        "icon": "media/connect.svg",
        "category": "SSH Connect"
      },
      {
        "command": "ssh-connect.disconnect",
        "title": "Disconnect",
        "icon": "media/disconnect.svg",
        "category": "SSH Connect"
      },
      {
        "command": "ssh-connect.openPort",
        "title": "Forward Port",
        "icon": "media/connect.svg"
      },
      {
        "command": "ssh-connect.closePort",
        "title": "Unforward Port",
        "icon": "media/disconnect.svg"
      },
      {
        "command": "ssh-connect.openTerminal",
        "title": "Open Terminal",
        "icon": "media/terminal.svg"
      },
      {
        "command": "ssh-connect.openLink",
        "title": "Open Link",
        "icon": "media/openlink.svg"
      },
      {
        "command": "ssh-connect.selectNode",
        "title": "Select Node",
        "icon": "$(check)"
      },
      {
        "command": "ssh-connect.enableMultiSelect",
        "title": "Enable Multiple Selections",
        "icon": "$(check)"
      },
      {
        "command": "ssh-connect.disableMultiSelect",
        "title": "Disable Multiple Selections",
        "icon": "$(check-all)"
      },
      {
        "command": "ssh-connect.toggleCellRunLocation",
        "title": "Toggle Cell Run Location"
      },
      {
        "command": "ssh-connect.clearStoredPassword",
        "title": "Clear Stored Password",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "ssh-connect.refresh",
          "when": "view == ssh-connect.mainview",
          "group": "navigation"
        },
        {
          "command": "ssh-connect.enableMultiSelect",
          "when": "view == ssh-connect.mainview && ssh-connect.notebookActive && !ssh-connect.multiSelect",
          "group": "navigation"
        },
        {
          "command": "ssh-connect.disableMultiSelect",
          "when": "view == ssh-connect.mainview && ssh-connect.notebookActive && ssh-connect.multiSelect",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "ssh-connect.connect",
          "when": "view == ssh-connect.mainview && viewItem =~ /connection[^\\.]*.offline/",
          "group": "inline@1"
        },
        {
          "command": "ssh-connect.disconnect",
          "when": "view == ssh-connect.mainview && viewItem =~ /connection[^\\.]*.online/",
          "group": "inline@1"
        },
        {
          "command": "ssh-connect.openTerminal",
          "when": "view == ssh-connect.mainview && viewItem =~ /^connection[^\\.]*.(online|offline)/",
          "group": "inline@0"
        },
        {
          "command": "ssh-connect.openPort",
          "when": "view == ssh-connect.mainview && viewItem =~ /portForward[^\\.]*\\.(offline|error)/",
          "group": "inline@1"
        },
        {
          "command": "ssh-connect.closePort",
          "when": "view == ssh-connect.mainview && viewItem =~ /portForward[^\\.]*\\.online/",
          "group": "inline@1"
        },
        {
          "command": "ssh-connect.openLink",
          "when": "view == ssh-connect.mainview && viewItem =~ /portForwardLinked.(online|offline|adhoc)/",
          "group": "inline@0"
        },
        {
          "command": "ssh-connect.clearStoredPassword",
          "when": "view == ssh-connect.mainview && viewItem =~ /connection[^\\.]*/",
          "group": "context"
        }
      ]
    },
    "jsonValidation": [
      {
        "fileMatch": "sshconnect.json",
        "url": "./jshintrc.sshconnect.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "SSH Connect configuration",
      "properties": {
        "ssh-connect.sources": {
          "type": "array",
          "description": "Paths to external json files containg an array of SSH connection configurations, overrides vscode configured connections with same ids",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "file",
                  "sftp"
                ],
                "default": "file",
                "description": "configuration type"
              },
              "connection": {
                "type": "string",
                "description": "which connection to use if sftp. full path with any folders and id. E.g. \"folder/subfolder/connectionId\""
              },
              "autoConnect": {
                "type": "boolean",
                "default": true,
                "description": "if true, connection will be automatically opened on startup and configuration loaded"
              },
              "path": {
                "type": "string",
                "description": "path to file either locally or on server"
              }
            }
          }
        },
        "ssh-connect.hosts": {
          "type": "array",
          "description": "Connection configurations, see SSH2 connect method docs for more info: https://github.com/mscdex/ssh2#client-methods",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Connection ID and label, unique within the group or the last declared will be used"
              },
              "description": {
                "type": "string",
                "description": "Connection description"
              },
              "iconPath": {
                "type": "string",
                "description": "Icon path"
              },
              "iconPathConnected": {
                "type": "string",
                "description": "Icon path when connected"
              },
              "folder": {
                "type": "string",
                "description": "Tree view folder path"
              },
              "x11Port": {
                "type": "number",
                "default": 6000,
                "description": "If set, X11 connections will be forwarded to this port"
              },
              "enableDebug": {
                "type": "boolean",
                "default": false,
                "description": "If set, debug messages will be logged to the console"
              },
              "jumpServer": {
                "type": "string",
                "description": "Id of the connection that this connection has to be forwarded through"
              },
              "portForwards": {
                "type": "array",
                "description": "Port Forwards",
                "default": [],
                "items": {
                  "type": "object",
                  "properties": {
                    "srcAddr": {
                      "type": "string",
                      "default": "",
                      "description": "The local ip to forward from"
                    },
                    "srcPort": {
                      "type": "number",
                      "description": "The local port to forward"
                    },
                    "dstAddr": {
                      "type": "string",
                      "description": "The remote ip to forward to"
                    },
                    "dstPort": {
                      "type": "number",
                      "description": "The remote port to forward to"
                    },
                    "autoConnect": {
                      "type": "boolean",
                      "default": false,
                      "description": "Forward port on connect"
                    },
                    "link": {
                      "type": "string",
                      "default": "https",
                      "description": "protocol (http|https) or command to run on the forwarded port, %port% is replaced with the local port number"
                    },
                    "description": {
                      "type": "string",
                      "description": "port description"
                    }
                  }
                }
              },
              "agent": {
                "type": "string",
                "default": null,
                "description": "Path to ssh-agent's UNIX socket for ssh-agent-based user authentication. Windows users can either set to a windows pipe or path to a cygwin \"UNIX socket\" or 'pageant' for authenticating with Pageant."
              },
              "agentForward": {
                "type": "boolean",
                "default": false,
                "description": "Set to true to use openTerminal agent forwarding (auth-agent@openTerminal.com) for the life of the connection. agent must also be set to use this feature."
              },
              "algorithms": {
                "type": "object",
                "properties": {
                  "cipher": {
                    "type": "array",
                    "description": "Array of cipher algorithm names (with the most preferable first)."
                  },
                  "compress": {
                    "type": "array",
                    "description": "Array of compress algorithm names (with the most preferable first)."
                  },
                  "hmac": {
                    "type": "array",
                    "description": "Array of hmac algorithm names (with the most preferable first)."
                  },
                  "kex": {
                    "type": "array",
                    "description": "Array of kex algorithm names (with the most preferable first)."
                  },
                  "serverHostKey": {
                    "type": "array",
                    "description": "Array of serverHostKey algorithm names (with the most preferable first)."
                  }
                }
              },
              "forceIPv4": {
                "type": "boolean",
                "default": "false",
                "description": "Only connect via resolved IPv4 address for host."
              },
              "forceIPv6": {
                "type": "boolean",
                "default": "false",
                "description": "Only connect via resolved IPv6 address for host."
              },
              "host": {
                "type": "string",
                "default": "localhost",
                "description": "Hostname or IP address of the server."
              },
              "hostHash": {
                "type": "string",
                "default": null,
                "description": "Any valid hash algorithm supported by node. The host's key is hashed using this algorithm and passed to the hostVerifier function as a hex string."
              },
              "keepaliveCountMax": {
                "type": "number",
                "default": 3,
                "description": "How many consecutive, unanswered SSH-level keepalive packets that can be sent to the server before disconnection (similar to openTerminal's ServerAliveCountMax config option)."
              },
              "keepaliveInterval": {
                "type": "number",
                "default": 0,
                "description": "How often (in milliseconds) to send SSH-level keepalive packets to the server (in a similar way as openTerminal's ServerAliveInterval config option). Set to 0 to disable."
              },
              "localAddress": {
                "type": "string",
                "default": null,
                "description": "IP address of the network interface to use to connect to the server."
              },
              "localHostname": {
                "type": "string",
                "default": null,
                "description": "Along with localUsername and privateKey, set this to a non-empty string for hostbased user authentication."
              },
              "localPort": {
                "type": "number",
                "default": null,
                "description": "The local port number to connect from."
              },
              "localUsername": {
                "type": "string",
                "default": null,
                "description": "Along with localHostname and privateKey, set this to a non-empty string for hostbased user authentication."
              },
              "passphrase": {
                "type": "string",
                "default": null,
                "description": "For an encrypted privateKey, this is the passphrase used to decrypt it."
              },
              "password": {
                "type": "string",
                "default": null,
                "description": "Password for password-based user authentication."
              },
              "port": {
                "type": "number",
                "default": 22,
                "description": "Port number of the server."
              },
              "privateKey": {
                "type": "string",
                "default": null,
                "description": "A path to a private key for either key-based or hostbased user authentication (openTerminal format)."
              },
              "readyTimeout": {
                "type": "number",
                "default": 20000,
                "description": "How long (in milliseconds) to wait for the SSH handshake to complete."
              },
              "strictVendor": {
                "type": "boolean",
                "default": true,
                "description": "Performs a strict server vendor check before sending vendor-specific requests, etc. (e.g. check for openTerminal server when using openTerminal_noMoreSessions())."
              },
              "tryKeyboard": {
                "type": "boolean",
                "default": false,
                "description": "Try keyboard-interactive user authentication if primary user authentication method fails. If you set this to true, you need to handle the keyboard-interactive event."
              },
              "username": {
                "type": "string",
                "default": null,
                "description": "Username for authentication."
              }
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "14.x",
    "@types/ssh2": "^0.5.51",
    "@types/vscode": "^1.67.0",
    "@typescript-eslint/eslint-plugin": "^5.12.1",
    "@typescript-eslint/parser": "^5.12.1",
    "@vscode/test-electron": "^2.1.3",
    "eslint": "^8.9.0",
    "glob": "^8.0.1",
    "mocha": "^9.2.2",
    "typescript": "^4.5.5"
  },
  "dependencies": {
    "json-stringify-safe": "^5.0.1",
    "keytar": "^7.9.0",
    "ssh2": "^1.8.0"
  }
}

{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "Connection ID and label, unique within the group or the last declared will be used"
      },
      "description": {
        "type": "string",
        "description": "Connection description"
      },
      "iconPath": {
        "type": "string",
        "description": "Icon path"
      },
      "iconPathConnected": {
        "type": "string",
        "description": "Icon path when connected"
      },
      "folder": {
        "type": "string",
        "description": "Tree view folder path"
      },
      "x11Port": {
        "type": "number",
        "default": 6000,
        "description": "If set, X11 connections will be forwarded to this port"
      },
      "jumpServer": {
        "type": "string",
        "description": "Id of the connection that this connection has to be forwarded through"
      },
      "sshShellPath": {
        "type": "string",
        "default": "ssh",
        "description": "if you want to use a ssh client other than the built-in one for shell sessions"
      },
      "sshShellArgs": {
        "type": "array",
        "description": "Arguments for sshShell, %dstPort% is replaced with a local port number forwarded to ssh port on remote",
        "default": [
          "root@localhost",
          "-p %dstPort%"
        ],
        "items": {
          "type": "string",
          "description": "Argument for terminal"
        }
      },
      "sshShellAsProcess": {
        "type": "boolean",
        "default": false,
        "description": "If you don't want to run given sshShell from a vscode terminal"
      },
      "portForwards": {
        "type": "array",
        "description": "Port Forwards",
        "default": [],
        "items": {
          "type": "object",
          "properties": {
            "srcAddr": {
              "type": "string",
              "default": "",
              "description": "The local ip to forward from"
            },
            "srcPort": {
              "type": "number",
              "description": "The local port to forward"
            },
            "dstAddr": {
              "type": "string",
              "description": "The remote ip to forward to"
            },
            "dstPort": {
              "type": "number",
              "description": "The remote port to forward to"
            },
            "autoConnect": {
              "type": "boolean",
              "default": false,
              "description": "Forward port on connect"
            },
            "type": {
              "type": "string",
              "enum": [
                "https",
                "http"
              ],
              "description": "displays button for opening port in browser"
            }
          }
        }
      },
      "agent": {
        "type": "string",
        "default": null,
        "description": "Path to ssh-agent's UNIX socket for ssh-agent-based user authentication. Windows users: set to 'pageant' for authenticating with Pageant or (actual) path to a cygwin \"UNIX socket\"."
      },
      "agentForward": {
        "type": "boolean",
        "default": "false",
        "description": "Set to true to use openTerminal agent forwarding (auth-agent@openTerminal.com) for the life of the connection. agent must also be set to use this feature."
      },
      "algorithms": {
        "type": "object",
        "properties": {
          "cipher": {
            "type": "array",
            "description": "Array of cipher algorithm names (with the most preferable first)."
          },
          "compress": {
            "type": "array",
            "description": "Array of compress algorithm names (with the most preferable first)."
          },
          "hmac": {
            "type": "array",
            "description": "Array of hmac algorithm names (with the most preferable first)."
          },
          "kex": {
            "type": "array",
            "description": "Array of kex algorithm names (with the most preferable first)."
          },
          "serverHostKey": {
            "type": "array",
            "description": "Array of serverHostKey algorithm names (with the most preferable first)."
          }
        }
      },
      "forceIPv4": {
        "type": "boolean",
        "default": "false",
        "description": "Only connect via resolved IPv4 address for host."
      },
      "forceIPv6": {
        "type": "boolean",
        "default": "false",
        "description": "Only connect via resolved IPv6 address for host."
      },
      "host": {
        "type": "string",
        "default": "localhost",
        "description": "Hostname or IP address of the server."
      },
      "hostHash": {
        "type": "string",
        "default": null,
        "description": "Any valid hash algorithm supported by node. The host's key is hashed using this algorithm and passed to the hostVerifier function as a hex string."
      },
      "keepaliveCountMax": {
        "type": "number",
        "default": 3,
        "description": "How many consecutive, unanswered SSH-level keepalive packets that can be sent to the server before disconnection (similar to openTerminal's ServerAliveCountMax config option)."
      },
      "keepaliveInterval": {
        "type": "number",
        "default": 0,
        "description": "How often (in milliseconds) to send SSH-level keepalive packets to the server (in a similar way as openTerminal's ServerAliveInterval config option). Set to 0 to disable."
      },
      "localAddress": {
        "type": "string",
        "default": null,
        "description": "IP address of the network interface to use to connect to the server."
      },
      "localHostname": {
        "type": "string",
        "default": null,
        "description": "Along with localUsername and privateKey, set this to a non-empty string for hostbased user authentication."
      },
      "localPort": {
        "type": "number",
        "default": null,
        "description": "The local port number to connect from."
      },
      "localUsername": {
        "type": "string",
        "default": null,
        "description": "Along with localHostname and privateKey, set this to a non-empty string for hostbased user authentication."
      },
      "passphrase": {
        "type": "string",
        "default": null,
        "description": "For an encrypted privateKey, this is the passphrase used to decrypt it."
      },
      "password": {
        "type": "string",
        "default": null,
        "description": "Password for password-based user authentication."
      },
      "port": {
        "type": "number",
        "default": 22,
        "description": "Port number of the server."
      },
      "privateKey": {
        "type": "string",
        "default": null,
        "description": "A path to a private key for either key-based or hostbased user authentication (openTerminal format)."
      },
      "readyTimeout": {
        "type": "number",
        "default": 20000,
        "description": "How long (in milliseconds) to wait for the SSH handshake to complete."
      },
      "strictVendor": {
        "type": "boolean",
        "default": true,
        "description": "Performs a strict server vendor check before sending vendor-specific requests, etc. (e.g. check for openTerminal server when using openTerminal_noMoreSessions())."
      },
      "tryKeyboard": {
        "type": "boolean",
        "default": false,
        "description": "Try keyboard-interactive user authentication if primary user authentication method fails. If you set this to true, you need to handle the keyboard-interactive event."
      },
      "username": {
        "type": "string",
        "default": null,
        "description": "Username for authentication."
      }
    }
  }
}